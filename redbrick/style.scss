/*
Theme Name: Redbrick
Theme URI: https://github.com/jivanpal/redbrick-theme-for-wordpress
Author: Jivan Pal
Author URI: https://www.jivanpal.com/
Description: A WordPress theme designed for Redbrick, the official University of Birmingham student newspaper.
Version: 0.19.01.03
License: GNU GPLv3
License URI: https://www.gnu.org/licenses/gpl-3.0-standalone.html
Text Domain: redbrick
Tags: 
This theme doesn't have a more detailed description â€” yet!
*/

/**
 * CSS reset
 * Adapted from the work of Eric A. Meyer.
 * http://meyerweb.com/eric/tools/css/reset/ (v2.0, 2011-01-26)
 */

* {
    box-sizing: border-box;
}

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed, 
figure, figcaption, footer, header, hgroup, 
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
	margin: 0;
	padding: 0;
	border: 0;
    font-size: 100%;
    font: inherit;
    text-decoration: inherit;
    vertical-align: baseline;
}
/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure, 
footer, header, hgroup, menu, nav, section {
	display: block;
}
ol, ul {
	list-style: none;
}
blockquote, q {
	quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: '';
	content: none;
}
table {
	border-collapse: collapse;
	border-spacing: 0;
}
a {
    color: inherit;
    text-decoration: none;
}
a:hover {
    color: inherit;
    text-decoration: underline;
}

/**
 * END - CSS reset
 */

/** Colors **/

$header-footer-bg-color: #272727;
$header-fg-color: white;
$footer-fg-color: #ddd;
$footer-fg-accent-color: #fff;

$hamburger-menu-separator-color: #ddd;

$main-bg-color: white;
$main-fg-color: #000;
$main-fg-accent-color: #222;

$showcase-fg-color: white;

$ad-declaration-bg-color: #ddd;
$ad-declaration-fg-color: #111;

/** END - Colors **/

$header-height:             50px;
$header-padding-side:       15px;
$header-nav-item-padding:   10px;
$header-nav-shadow-size:    30px;

$hamburger-icon-height: 20px;
$logo-icon-height:      28px;
$logo-icon-wordmark-separation: 3px;
$logo-wordmark-height:  22px;
$search-icon-height:    22px;

$footer-social-media-icon-height: 25px;

$hamburger-menu-shadow-size: $header-height;

$author-image-dimensions: 64px;

/**
 * The maximum amount of vertical screen real estate that intrusive block
 * elements (e.g. images/figures) should take up.
 */
$max-vh-usage: 50vh;

$spacing-default: 10px;

$showcase-peek: 60px;   // how much of the next item in a showcase can be seen
$showcase-height: calc(100vw - #{$showcase-peek});
$showcase-item-title-padding: 10px;
$showcase-shadow-size: 50px;

$banner-content-height: 50px;

/**
 * Main styles
 */

// Custom resets

p {
    margin: $spacing-default;
}
h6, h5, h4, h3, h2, h1 {
    margin: $spacing-default;
    font-weight: bold;
}
h1 {
    font-size: 2em;
}
h2 {
    font-size: 1.8em;
}
h3 {
    font-size: 1.5em;
}
h4 {
    font-size: 1.2em;
}
h5 {
    font-size: 1.1em;
}
h6 {
    font-size: 1em;
}
svg {
    /**
     * Forces SVGs to match the height of their container whilst retaining their
     * aspect ratio.
     */
    height: 100%;
    width: auto;
}

// Specifics

body {
    font: 16px/1.3 'Helvetica Neue', 'Helvetica', 'Arial', monospace;

    background-color: $header-footer-bg-color; // Gives over-scroll the right color.
}

header {
    /** Sticky header */
    position: sticky;
    top: 0;

    /** 
     * Prevents other non-statically positioned elements from sitting on top of
     * the header.
     */
    z-index: 999;

    body.admin-bar & {
        @media only screen and (min-width: 601px) and (max-width: 782px) {
            top: 46px;
        }

        @media only screen and (min-width: 783px) {
            top: 32px;
        }
    }

    /**
     * The class `notSticky` is set appropriately in
     * `/assets/position-header.js`.
     */
    &.notSticky {
        position: static;

        + * {
            margin-top: 0;
        }
    }

    /** END - Sticky header */
    
    width: 100vw;
    height: $header-height;

    /** 
     * We only assign `padding-left` here, and assign `padding-right` to
     * `.search` to overcome a browser inconsistency relating to whether padding
     * and margin at the end of scrollable elements are realised.
     * 
     * See the following StackOverflow answer for details:
     * https://stackoverflow.com/a/38177668/9996911
     */
    padding-left: $header-padding-side;

    background-color: $header-footer-bg-color;
    color: $header-fg-color;

    /** TODO: Change this to correct colour; depends on section of website */
    border-bottom: 5px solid #c00;

    display: flex;
    justify-content: space-between;
    align-items: center;

    .hamburger {
        height: $hamburger-icon-height;
    }

    .central-element {
        display: flex;

        .logo {
            display: flex;
            justify-content: space-between;
            align-items: center;

            > div {
                margin: $logo-icon-wordmark-separation;
            }

            .icon {
                height: $logo-icon-height;
            }

            .wordmark {
                height: $logo-wordmark-height;

                @media only screen and (max-width: 280px) {
                    display: none;
                }
            }
        }

        nav {
            /**
             * Media query is necessary to prevent necessary use of `!important`
             * to override many properties in desktop query that are explicitly
             * set here, but for which we would like to assume default values.
             */
            @media only screen and (max-width: 600px) {
                z-index: 998;
                display: flex;
                position: fixed;
                left: 0;
                bottom: 0;

                width: 100vw;

                height: calc(100vh - #{$header-height});

                /**
                 * The `visible` class is toggled on `<nav>` via JS when the
                 * hamburger icon in the header is clicked.
                 * See `scripts/toggle-hamburger-menu.js` for details.
                 */
                &:not(.visible) {
                    left: -100vh;   // slide the menu off the left of the screen
                }

                transition: left 300ms; // CSS transition for smooth slide into and out of view.
                
                /**
                 * TODO: Consider applying this. Perhaps only apply to the
                 * active section (e.g. on a "Comment" page, bold "Comment")?
                 */
                //font-weight: bold;

                ul {
                    flex-grow: 1;

                    overflow-x: hidden;
                    overflow-y: auto;

                    background: $header-footer-bg-color;
                    border-right: 1px solid $hamburger-menu-separator-color;

                    li {
                        padding: 10px;

                        &:not(:last-child) {
                            border-bottom: 1px solid $hamburger-menu-separator-color;
                        }
                    }
                }

                .rest-of-screen {
                    width: $header-height;
                    background: linear-gradient(
                        to right,
                        rgba(black, 0.8),
                        25%,
                        rgba(black, 0.05)
                    );
                }
            }
        }
    }

    .search {
        height: $search-icon-height;
        padding-right: $header-padding-side;
    }
}

main {
    background-color: $main-bg-color;

    color: $main-fg-color;

    a {
        color: $main-fg-accent-color;
        text-decoration: underline;
    }
}

main, footer {
    /**
     * Margin overlap fix 
     * This prevents the first and list children of both `<main>` and `<footer>`
     * from overlapping, and ensures that `<main>` and `<footer>` themselves are
     * directly touching.
     */
     padding: 1px 0;
}

footer {
    background-color: $header-footer-bg-color;
    color: $footer-fg-color;
    a:hover {
        color: $footer-fg-accent-color;
    }
    
    h1 {
        font-size: 1.5em;
        font-weight: bold;
        text-transform: uppercase;
    }

    h2 {
        font-size: 1.2em;
    }

    :not(ul):not(div):not(a):not(svg) {
        margin: $spacing-default;
    }

    div:not(:first-child), a > div {
        &:not(.icon-container):not(.thumbnail) {
            border-top: 1px solid $footer-fg-color;
        }
    }

    /**
     * Actually give `.thumbnail` an upper border. This rule is not incorporated
     * into the previous rule becuase it needs to have lower specificity in
     * order to be overriden in a subsequent media query.
     */
    .thumbnail {
        border-top: 1px solid $footer-fg-color;
    }

    .social-media {
        display: flex;
        align-items: center;
        justify-content: flex-start;

        ul {
            display: flex;
            
            .icon-container  {
                height: $footer-social-media-icon-height;
            }
        }
    }
    
    .latest-issue {
        display: flex;
        flex-direction: column;

        .thumbnail {
            padding: $spacing-default;
            
            img {
                display: block;
                margin: 0 auto;
                max-height: $max-vh-usage;
                max-width: 100%;
            }
        }

        /** TODO: Deal with presentation on tablets; thumbnail is far too large. */
        @media only screen and (min-width: 400px) {
            flex-direction: row;

            .thumbnail {
                border-top: 0;
                border-left: 1px solid $footer-fg-color;
            }
        }
    }
}

// Classes

.showcase-container {
    width: 100%;

    position: relative;

    &::before, &::after {
        content: "";
        position: absolute;
        width: 0;
        height: 100%;
        top: 0;
        z-index: 1;
        pointer-events: none; // allows (touchscreen) user to scroll whilst pointer is over shadows

        transition: width 100ms;
    }

    &.left-shadow::before {
        width: $showcase-shadow-size;
    }

    &.right-shadow::after {
        width: $showcase-shadow-size;
    }

    // Left shadow
    &::before {
        left: 0;

        background: linear-gradient(
            to right,
            rgba(black, 1),
            rgba(black, 0.05),
            rgba(black, 0)
        );
    }

    // Right shadow
    &::after {
        right: 0;

        background: linear-gradient(
            to left,
            rgba(black, 1),
            rgba(black, 0.05),
            rgba(black, 0)
        );
    }
}

.showcase {
    display: flex;
    overflow-x: auto;
    overflow-y: hidden;
    height: $showcase-height;
    max-height: $max-vh-usage;

    &, a {
        color: $showcase-fg-color;
    }

    .showcase-item {
        /** `$max-vh-usage` matches `max-height` of `.showcase` */
        flex: 1 0 $max-vh-usage;

        display: block;
        height: 100%;

        &:not(:last-child) {
            border-right: 1px solid white;
        }

        a {
            /** Allows `position: absolute` on `.title` to work as intended. */
            display: block;
            width: 100%;
            height: 100%;
            position: relative;
        }
        
        .thumbnail {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        /** TODO: Remove sample colours when done testing. */
        .tint {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;

            opacity: 0.25;

            &:hover {
                opacity: 0.35;
            }

            &.red {
                background-color: #c00;
            }

            &.orange {
                background-color: #c60;
            }

            &.yellow {
                background-color: #cc0;
            }

            &.green {
                background-color: #0c0;
            }

            &.blue {
                background-color: #00c;
            }

            

        }

        .title {
            position: absolute;
            bottom: 0;
            max-width: 100%;
            padding: $showcase-item-title-padding;

            text-shadow: 1px 1px 0 #333;
        }
    }
}

.banner {
    height: $banner-content-height;
    width: 100vw;
    
    a {
        display: block;
    }
    
    .content {
        margin: 0 auto;
        height: 100%;
    }
}

// Page classes

main.post {
    .infobox {
        display: flex;
        justify-content: stretch;

        .author-image {
            height: $author-image-dimensions;
            width: $author-image-dimensions;
        }
    }
}

/**
 * END - Main styles
 */

 /**
  * Element styles
  */

// -- Nothing here yet

/**
 * END - Element styles
 */

/**
 * Desktop styles
 */

@media only screen and (min-width: 601px) {
    header {
        .hamburger {
            display: none;
        }
        
        .central-element {
            height: 100%;

            display: flex;
            align-items: center;
            
            /**
             * In conjunction with the properties set on `nav`, this renders
             * scrollable navigation of the correct width.
             */
            flex-grow: 1;

            .logo {
                padding-right: $header-nav-item-padding;
            }

            nav {
                display: block;
                height: 100%;

                /**
                 * Set the width of the `nav` to accomodate all of the space
                 * between the `.logo` and `.search`.
                 */
                width: 0;
                flex-grow: 1;

                /** Overflow shadows */

                position: relative;

                &::before, &::after {
                    content: "";

                    height: 100%;
                    width: 0;
                    transition: width 100ms;
                    
                    position: absolute;
                    top: 0;

                    z-index: 1;
                    pointer-events: none;
                }

                &.left-shadow::before {
                    width: $header-nav-shadow-size;
                }

                &.right-shadow::after {
                    width: $header-nav-shadow-size;
                }

                &::before {
                    left: 0;
                    background: linear-gradient(
                        to right,
                        rgba(black, 1),
                        rgba(black, 0)
                    );
                }

                &::after {
                    right: 0;
                    background: linear-gradient(
                        to left,
                        rgba(black, 1),
                        rgba(black, 0)
                    );
                }

                /** END - Overflow shadows */
                
                ul {
                    display: flex;
                    height: 100%;

                    overflow-x: auto;

                    li {
                        flex: 0 0 auto;
    
                        height: 100%;
                        
                        a {
                            display: flex;
                            align-items: center;

                            width: 100%;
                            height: 100%;

                            span {
                                padding: 0 $header-nav-item-padding;
                            }
                        }

                        /** TODO: Remove sample colours when done testing. */
                        &.tint:hover {
                            &.red {
                                background-color: rgba(#c00, 0.35);
                            }

                            &.orange {
                                background-color: rgba(#c60, 0.35);
                            }

                            &.yellow {
                                background-color: rgba(#cc0, 0.35);
                            }

                            &.green {
                                background-color: rgba(#0c0, 0.35);
                            }

                            &.blue {
                                background-color: rgba(#0ac, 0.35);
                            }
                        }
                    }
                }
            }
        }

        .search {
            padding-left: $header-padding-side;
        }
    }

    footer {
        /**
         * TODO: Row-layout using CSS grid; need fixed column widths, so flexbox
         * is unsuitable.
         */
    }
}
